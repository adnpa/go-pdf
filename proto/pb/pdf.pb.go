// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: pdf.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 切分
type SplitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page []string `protobuf:"bytes,1,rep,name=page,proto3" json:"page,omitempty"`
	Span int64    `protobuf:"varint,2,opt,name=span,proto3" json:"span,omitempty"`
	File string   `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *SplitReq) Reset() {
	*x = SplitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitReq) ProtoMessage() {}

func (x *SplitReq) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitReq.ProtoReflect.Descriptor instead.
func (*SplitReq) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{0}
}

func (x *SplitReq) GetPage() []string {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SplitReq) GetSpan() int64 {
	if x != nil {
		return x.Span
	}
	return 0
}

func (x *SplitReq) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type SplitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SplitResp) Reset() {
	*x = SplitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitResp) ProtoMessage() {}

func (x *SplitResp) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitResp.ProtoReflect.Descriptor instead.
func (*SplitResp) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{1}
}

func (x *SplitResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// 合并
type MergeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *MergeReq) Reset() {
	*x = MergeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeReq) ProtoMessage() {}

func (x *MergeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeReq.ProtoReflect.Descriptor instead.
func (*MergeReq) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{2}
}

func (x *MergeReq) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type MergeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Code uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *MergeResp) Reset() {
	*x = MergeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeResp) ProtoMessage() {}

func (x *MergeResp) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeResp.ProtoReflect.Descriptor instead.
func (*MergeResp) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{3}
}

func (x *MergeResp) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *MergeResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// 加水印
type AddWaterMarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	File  string   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Pages []string `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`
}

func (x *AddWaterMarkReq) Reset() {
	*x = AddWaterMarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWaterMarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWaterMarkReq) ProtoMessage() {}

func (x *AddWaterMarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWaterMarkReq.ProtoReflect.Descriptor instead.
func (*AddWaterMarkReq) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{4}
}

func (x *AddWaterMarkReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AddWaterMarkReq) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *AddWaterMarkReq) GetPages() []string {
	if x != nil {
		return x.Pages
	}
	return nil
}

type AddWaterMarkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Code uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddWaterMarkResp) Reset() {
	*x = AddWaterMarkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWaterMarkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWaterMarkResp) ProtoMessage() {}

func (x *AddWaterMarkResp) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWaterMarkResp.ProtoReflect.Descriptor instead.
func (*AddWaterMarkResp) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{5}
}

func (x *AddWaterMarkResp) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *AddWaterMarkResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_pdf_proto protoreflect.FileDescriptor

var file_pdf_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x64, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x64, 0x66,
	0x22, 0x46, 0x0a, 0x08, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x70, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x4f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x3a, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x99, 0x01,
	0x0a, 0x0a, 0x50, 0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x64, 0x66, 0x2e, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x64, 0x66, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x0d, 0x2e,
	0x70, 0x64, 0x66, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70,
	0x64, 0x66, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x2e, 0x70,
	0x64, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x64, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pdf_proto_rawDescOnce sync.Once
	file_pdf_proto_rawDescData = file_pdf_proto_rawDesc
)

func file_pdf_proto_rawDescGZIP() []byte {
	file_pdf_proto_rawDescOnce.Do(func() {
		file_pdf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pdf_proto_rawDescData)
	})
	return file_pdf_proto_rawDescData
}

var file_pdf_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pdf_proto_goTypes = []interface{}{
	(*SplitReq)(nil),         // 0: pdf.SplitReq
	(*SplitResp)(nil),        // 1: pdf.SplitResp
	(*MergeReq)(nil),         // 2: pdf.MergeReq
	(*MergeResp)(nil),        // 3: pdf.MergeResp
	(*AddWaterMarkReq)(nil),  // 4: pdf.AddWaterMarkReq
	(*AddWaterMarkResp)(nil), // 5: pdf.AddWaterMarkResp
}
var file_pdf_proto_depIdxs = []int32{
	0, // 0: pdf.PdfService.Split:input_type -> pdf.SplitReq
	2, // 1: pdf.PdfService.Merge:input_type -> pdf.MergeReq
	4, // 2: pdf.PdfService.AddWaterMark:input_type -> pdf.AddWaterMarkReq
	1, // 3: pdf.PdfService.Split:output_type -> pdf.SplitResp
	3, // 4: pdf.PdfService.Merge:output_type -> pdf.MergeResp
	5, // 5: pdf.PdfService.AddWaterMark:output_type -> pdf.AddWaterMarkResp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pdf_proto_init() }
func file_pdf_proto_init() {
	if File_pdf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pdf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWaterMarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWaterMarkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pdf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pdf_proto_goTypes,
		DependencyIndexes: file_pdf_proto_depIdxs,
		MessageInfos:      file_pdf_proto_msgTypes,
	}.Build()
	File_pdf_proto = out.File
	file_pdf_proto_rawDesc = nil
	file_pdf_proto_goTypes = nil
	file_pdf_proto_depIdxs = nil
}
